Functions return in a server is called API.

Front-end is client and Server is backend.

Flask is a lightweight where as jango is heavyweight so jango is used in business production.

API -> DNS server -> then calling API Function's name (192.7.co.bbwcubdcibw) 

Structure of Flask:
templates -> HTML 
app.py -> main Flask
static -> js ,image,css.

// installing Flask
pip install flask
py -m flask --version
'''-m means which modules'''


app = Flask(__name__) ->''' here __name__ print current apps or methods  name.'''
  
app.py
new.py
here there are two apps in flask 
we can call a function which is inside app.py in new.py
so while calling app.py when we run new.py all the function in app.py will return in new.py if we want only specific function to be called then we use '''if __name__ == "__main__": inside this we call the functions which should belong only to this functions.



@app.route('/greet")
here app is local host that is server and greet is function written by us.


if __name__=="__main__":
    app.run(debug=True) 
this is used to run the app here debug=true means the changes made will be shown in realtime in server.



port:5000,6000,7000 port is the process id
these are the port which the server gives to the application that are running in the server.eg vscode->5000 so while running the app.y it will be running in 5000port.
ip address:portid/data(that is page)  (ip address of server)



@app.route('/hello')
this is normal routing...but if we want to make a dynamic.
@app.route('/hello/<name>')    here we should pass anything inside<> so by using this we can store many values inside app and then can be used inside function.
def h(name):
  return f"hello {name}"

so while running 
121:0.011:5000:/hello/Nishan   -> hello nishan
121:0.011:5000:/hello/tanishk   -> hello tanishk


a server can return only Jason,html,text.
the main job of server is to return the data that's all



get method -> the data sent to server can be seen in theurl of the network and is not safe.we can send only 30 character data in get method
get data is not encrypted 


post method -> data is encrypted and is safe to send the data.
we can send unlimited data in post method.

so the server and the client method should be same if the method is in post form in server then we should call in using post method if we try to call using get method then the server will send error.

in python Flask we use jsonify module to conver any data into json format.



Exception in Flask:
to check if  we have error in sever the we use (handling error)

@app.errorhandler(404)
def page_not_found(e):
  print(str(e))
  return "<strong> page not found !!!</strong> ",404 

so while returning we can send our custom page so that it shows same in all the browser.
























